name: CI/CD

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  check_broken_links:
    name: Check links
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v2
        with:
          node-version: '14.x'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build Documentation
        run: yarn build

  deploy_preview:
    needs: check_broken_links
    name: Deploy PR Preview
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: rlespinasse/github-slug-action@v3.x
        name: Inject slug/short variables
      - uses: bobheadxi/deployments@v0.4.3
        name: Start deployment
        id: preview_deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: ${{ env.GITHUB_HEAD_REF_SLUG_URL }}
          ref: ${{ github.head_ref }}

      - uses: amondnet/vercel-action@v20
        name: Deploy to Vercel
        id: vercel_preview
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_SCOPE }}
          alias-domains: pr-{{PR_NUMBER}}-superface-docs.${{ secrets.VERCEL_DOMAIN }}

      - uses: bobheadxi/deployments@v0.4.3
        name: Finish deployment
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.preview_deployment.outputs.deployment_id }}
          env_url: ${{ steps.vercel_preview.outputs.preview-url }}

  deploy_production:
    needs: check_broken_links
    name: Deploy to Production
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: bobheadxi/deployments@v0.4.3
        name: Start deployment
        id: production_deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          auto_inactive: true
          env: Production

      - uses: amondnet/vercel-action@v20
        name: Deploy to Vercel
        id: vercel_production
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          scope: ${{ secrets.VERCEL_SCOPE }}
          vercel-args: '--prod'
          github-comment: false

      - uses: bobheadxi/deployments@v0.4.3
        name: Finish deployment
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.production_deployment.outputs.deployment_id }}
          env_url: ${{ steps.vercel_production.outputs.preview-url }}
